@using global::Web.Helpers
@using Web.Model.Models
@using PagedList.Mvc
@model PagedList.IPagedList<BlogPostCategoryMapping>
    @{
        var blogCategory = ViewBag.blogCategory as BlogCategory ?? new BlogCategory();
        ViewBag.Title = blogCategory.MetaTitle ?? blogCategory.Name;
        ViewBag.MetaKeywords = blogCategory.MetaKeywords;
        ViewBag.MetaDescription = blogCategory.MetaDescription ?? blogCategory.Description;

        var grouped = blogCategory.Grouped == "recruitment" ? "recruitment" : "media,news";
        var subCategories = DataWhereHelper.BlogCategoryByGroupeds(grouped + ",");

        var listBlogs = Model.Where(e => e.BlogPost.Status == BlogPostStatus.Published && e.BlogPost.PublishedTime <= DateTime.Now).ToList();
        var featuredBlog = new BlogPostCategoryMapping() { BlogPost = new BlogPost() };
        if (listBlogs.Any())
        {
            featuredBlog = listBlogs.FirstOrDefault(e => e.IsFeaturedPost) ?? listBlogs.First();
        }

        IEnumerable<BlogPostCategoryMapping> list2Blogs;
        IEnumerable<BlogPostCategoryMapping> list1Blogs;
        IEnumerable<BlogPostCategoryMapping> listNBlogs;
        {
            list2Blogs = listBlogs.Where(e => e.BlogPost.Title != featuredBlog.BlogPost.Title).Take(2);
            list1Blogs = listBlogs.Where(e => e.BlogPost.Title != featuredBlog.BlogPost.Title).Skip(2).Take(1);
            listNBlogs = listBlogs.Where(e => e.BlogPost.Title != featuredBlog.BlogPost.Title).Skip(3).Take(6);
        }

    }
    @section styles{
        @Styles.Render("~/bundles/content/default/blog/blog-list/css", "~/bundles/content/default/blog/blog-category/css", "~/bundles/content/default/pagelist/css")
    }
    @section banners{
        @{
            var picture = DataWhereHelper.PictureBySlug("banner->" + Request.Path);
            var paramArrs = new List<KeyValuePair<string, string>>()
        {
                new KeyValuePair<string, string>("banner-title", picture.Title),
                new KeyValuePair<string, string>("banner-img", picture.Url )
            };
        }
        @Html.Action("CallerWithParams", "StaticBlock", new { identifier = "page::banner-top-default", paramArrs, area = "" })
    }

                               <div class="page-wrapper">
                                   <div class="media">
                                       <div class="row m-0">
                                           <div class="col-md-10 offset-md-1">
                                               <div class="container p-0">
                                                   <ul class="nav nav-tabs">
                                                       @foreach (var blog in subCategories as List<BlogCategory>)
                                                       {

                                                           <li class="nav-item">
                                                               <a class="nav-link card--desc-text text-dark @(blogCategory.Grouped == blog.Grouped ? "active":"")" href="@SlugHelper.BlogCategory(blog.Id)">@blog.Name</a>
                                                           </li>
                                                       }

                                                   </ul>

                                                   <!-- Tab panes -->
                                                   <div class="tab-content">
                                                       <div id="media" class="tab-pane active">
                                                           <div class="row">
                                                               @if (Model.Count < 1)
                                                               {
                                                                   <div style="padding: 32px 0px;">
                                                                       <b>@LanguageHelper.Translate("This category currently has no corresponding news_Text")!</b>
                                                                   </div>
                                                               }
                                                               else
                                                               {
                                                                   if (blogCategory.Grouped == "news")
                                                                   {

                                                                       foreach (BlogPostCategoryMapping item in Model)
                                                                       {
                                                                            var isExternal = item.BlogPost.Content.Length < 500 && item.BlogPost.Content.Contains("href");
                                                                           var blogLink = isExternal ? DataWhereHelper.ExtractLinkFromHtml(item.BlogPost.Content) : SlugHelper.BlogPost(item.BlogPostId);
                                                                           <div class="item-news">
                                                                               <div class="row">
                                                                                   <div class="col-md-6">
                                                                                       <a href="@blogLink" target="@(isExternal ?"_blank":"_self")"><img src="@item.BlogPost.Avatar" alt="@item.BlogPost.Title"></a>
                                                                                   </div>
                                                                                   <div class="col-md-5 offset-md-1">
                                                                                       <div class="card--desc-text text-dark text-capitalize">
                                                                                           @item.BlogPost.Title
                                                                                       </div>
                                                                                       <p class="news-desc card--sub-text text-dark">
                                                                                           @item.BlogPost.Excerpt
                                                                                       </p>
                                                                                       <a href="@blogLink" class="read-more" target="@(isExternal ?"_blank":"_self")">
                                                                                           <span class="card--sub-text text-dark">read more</span>
                                                                                           <img src="../../../assets/images/components/right.png" alt="Read more">
                                                                                       </a>
                                                                                   </div>
                                                                               </div>
                                                                           </div>
                                                                       }
                                                                   }
                                                                   else
                                                                   {
                                                                       foreach (BlogPostCategoryMapping item in Model)
                                                                       {
                                                                           var isExternal = true;
                                                                           var blogLink = isExternal ? DataWhereHelper.ExtractLinkFromHtml(item.BlogPost.Content) : SlugHelper.BlogPost(item.BlogPostId);

                                                                           <div class="col-lg-4 col-md-6">
                                                                               <a href="@blogLink" target="@(isExternal ?"_blank":"_self")" class="card-media">
                                                                                   <img src="@item.BlogPost.Avatar" alt="" class="card-media__image">
                                                                                   <div class="card-media__title">
                                                                                       <span class="card--desc-text text-dark text-capitalize mt-0">
                                                                                           @item.BlogPost.Title
                                                                                       </span>
                                                                                       <img src="../../../assets/images/components/right.png" alt="">
                                                                                   </div>
                                                                               </a>
                                                                           </div>

                                                                       }
                                                                   }

                                                               }


                                                           </div>

                                                           <div class="pagination-wrap">
                                                               @Html.PagedListPager(Model, page => Url.Action("Page", "Home", new { ViewBag.sortOrder, page }), new PagedListRenderOptions { LinkToFirstPageFormat = "<< First", LinkToPreviousPageFormat = "<i class='fa fa-angle-left'></i>  Prev", LinkToNextPageFormat = "Next <i class='fa fa-angle-right'></i>", LinkToLastPageFormat = "Last >>" })
                                                           </div>
                                                       </div>
                                                       
                                                   </div>
                                               </div>
                                           </div>
                                       </div>
                                   </div>
                               </div>
    

    @section scripts {
        
        <script> 
            var currentLink = $($(".main-menu a[href='/en/media']"));
            if (currentLink != null) {
                currentLink.parent().addClass("active");
                currentLink.parent().parent().addClass("active");
                currentLink.parent().parent().parent().addClass("active");
                }
        </script>
    }
